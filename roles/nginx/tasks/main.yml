---
# Variable setup.
- name: Include OS-specific variables.
  include_vars: "{{ ansible_os_family }}.yml"

- name: Define nginx_user.
  set_fact:
    nginx_user: "{{ __nginx_user }}"
  when: nginx_user is not defined

# Setup/install tasks.
- include: setup-RedHat.yml
  when: ansible_os_family == 'RedHat'

- include: setup-Debian.yml
  when: ansible_os_family == 'Debian'

- name: Copy configuration files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - {
      src: "nginx.conf.j2",
      dest: "/etc/nginx/nginx.conf"
      }
#    - {
#      src: "wordpress.conf.j2",
#      dest: "/etc/nginx/conf.d/wordpress.conf"
#      }
#    - {
#      src: "discourse.conf.j2",
#      dest: "/etc/nginx/conf.d/discourse.conf"
#      }
    - {
      src: "mediawiki.conf.j2",
      dest: "/etc/nginx/conf.d/mediawiki.conf"
      }
#    - {
#      src: "monit.conf.j2",
#      dest: "/etc/nginx/conf.d/monit.conf"
#      }
  notify: restart nginx


- name: Create dhparam.pem if not exists
  command: >
    openssl dhparam -out {{ ssl_cert_path }}/dhparam.{{ item }}.pem 2048
    creates={{ ssl_cert_path }}/dhparam.{{ item }}.pem
  with_items:
    - '{{ mediawiki_sitename }}'
  tags:
    - ssl

- name: Add nginx to user groups
  user:
    name: nginx
    append: yes
    groups: wordpress,mediawiki

- name: Ensure nginx is started and enabled to start at boot.
  service: name=nginx state=started enabled=yes
